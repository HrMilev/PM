@inject IStringLocalizer<Localization> loc
@inject IUploadedFileRepository uploadedFileRepository

<div class="card-body">
    <table class="table table-hover">
        <thead>
            <tr>
                <th style="width: 91%" scope="col">@loc["Name"]</th>
                <th style="width: 3%" scope="col"></th>
                <th style="width: 3%" scope="col"></th>
                <th style="width: 3%" scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var child in CurrentFolder.ChildFolders)
            {
                <FolderContentRow Folder="child"
                                  OnOpen="OnOpen"
                                  OnEdit="OnEdit"
                                  OnDelete="OnDelete"></FolderContentRow>
            }
            @foreach (var file in CurrentFolder.Files)
            {
                <UploadedFileRow File="file"
                                 OnDelete="OnFileDelete"
                                 OnEdit="OnFileEdit"></UploadedFileRow>
            }
        </tbody>
        <tfoot>
            <tr>
                @if (isAddingFolder)
                {
                    <td>
                        <EditForm class="form-inline" Model="newFolder" OnValidSubmit="OnValidAdding">
                            <DataAnnotationsValidator />
                            <div class="form-group">
                                <InputText class="form-control border-dark"
                                           @bind-Value="@newFolder.Name">
                                </InputText>
                                <ValidationMessage For="@(() => newFolder.Name)" />
                            </div>
                            <button class="btn btn-warning" type="submit">@loc["Save"]</button>
                        </EditForm>
                    </td>
                    <td></td>
                    <td></td>
                    <td>
                        <Close OnClick="@(() => isAddingFolder = false)"></Close>
                    </td>
                }
                else
                {
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick=@OnAddingFolder>
                            <i class="fas fa-folder-plus"></i>
                        </button>
                    </td>
                }
            </tr>
        </tfoot>
    </table>
</div>


@code {
    private bool isAddingFolder;
    private FolderRestModel newFolder = new FolderRestModel();
    [Parameter]
    public FolderRestModel CurrentFolder { get; set; }
    [Parameter]
    public EventCallback<FolderRestModel> OnOpen { get; set; }
    [Parameter]
    public EventCallback<FolderRestModel> OnEdit { get; set; }
    [Parameter]
    public EventCallback<FolderRestModel> OnAdd { get; set; }
    [Parameter]
    public EventCallback<FolderRestModel> OnDelete { get; set; }

    private void OnAddingFolder()
    {
        isAddingFolder = true;
    }

    private async Task OnFileDelete(UploadedFileRestModel file)
    {

    }

    private async Task OnFileEdit(UploadedFileRestModel file)
    {
        var updatedFile = await uploadedFileRepository.UpdateAsync(file);
        var oldFile = CurrentFolder.Files.FirstOrDefault(x => x.Id == updatedFile.Id);
        CurrentFolder.Files[CurrentFolder.Files.IndexOf(oldFile)] = updatedFile;
    }

    private async Task OnFileDownload(UploadedFileRestModel file)
    {

    }

    private async Task OnValidAdding()
    {
        isAddingFolder = false;
        await OnAdd.InvokeAsync(newFolder);
        newFolder = new FolderRestModel();
    }
}
